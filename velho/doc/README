Velho, a network-enabled graphic drawing application.
Copyright (C) 2009 Carlos Eduardo C. B. Shinagawa <cadu.coelho@gmail.com>

- Extra contact info:
	irc  : cadu@Freenode 
	I'm a regular in #nethack-offtopic, #dataflow and #japanese.

- Disclaimer:

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.
 
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.

- What is Velho?

	Velho is basically a server that waits for messages and
	draws stuff/clears the screen as requested.

	Velho receives messages thru UDP, using OSC as the communication
	protocol, thus, any app that can talk osc can talk to Velho
	(Puredata, Processing, liblo's oscsend, ...).

	Velho uses SDL for screen drawing/event handling and LibLO for OSC.

	Velho aims for simplicity, that means no opengl/3d/fancy graphics
	here, it's all 2D and simple blit ops so you can run it in
	just about any machine. Velho also doesn't multitasks well as it's 
	always trying to draw stuff as fast as it can so expect it to
	use 99% cpu or just lower the process priority.

	Velho divides the screen into a grid made of adjustable size rectangles,
	from 1x1 (ie: one pixel drawing) to as big as the whole screen.

- Compiling Velho:

	Velho compiles on Linux and Windows (with MINGW).

	On Linux:
		SDL + headers.

		LibLO + headers.

		"make" should give you a "velho" binary.

		if it fails: adjust the Makefile :D

	On Windows:
		A Makefile is provided for MINGW, but i must warn you that Windows compilation is tricky and
		requires lots of steps/fiddling... T__T

		Install MINGW and MSYS.

		Install or Compile SDL in your MINGW system.
			- There's a precompiled SDL dll/header package for MINGW available on the SDL website,
			or build it from source *pain*.

		Install Pthreads-Win32.
			- There's a precompiled dll/header package on their website. LibLO needs this.
			- Install it in your MinGW root as usual, libraries in /lib, headers in /include.
			- Warning: rename one suitable pthreadG***.dll and .a to pthread.dll and 
			pthread.a or LibLO won't link.

		Compile and install LibLO in your MINGW root.
			- if you installed pthreads-win32 and renamed the dlls properly,
			this will work just like linux "configure/make/make install"

		Compile Velho with given makefile.
			"make -f Makefile.mingw" should do the trick. or NOT...
			Some paths (liblo) had to be hardcoded in the makefile (no pkg-config) so
			be prepared to ADJUST stuff.

		*When deploying copies of Velho in win32 boxes, remember to put a SDL.dll
		in the same directory or it won't run*

- Launching Velho:

	"velho" without cmdline arguments will launch Velho with these settings:
		640x480 screen
		40x40 grid size (640/40 480/40 --> fullscreen 16x12 grid)
 		listening on port 7700

	command line arguments:
		-h	help screen
		-f	Start in fullscreen mode
		-x val	Set X resolution to "val" (320..1920)
		-y val	Set Y resolution to "val" (240..1280)
		-p val	Set velho to listen on port "val" (100..65535)

- Velho keybindings:

	Velho accepts these keys through its window/framebuffer.
	
	Key	Action

	"f"	Toggles Windowed/Fullscreen.
		*WARNING: if Velho's screen resolution isn't supported in fullscreen the app will quit*
		*no action when using DirectFB*

	"q"	Quits Velho.

- Communicating with Velho via OSC:

	Read "REAME.OSCCOMMANDS".


